#include <iostream>
#include <tuple>
#include <cmath>
using namespace std;

// 다이어트 시뮬레이션 함수
// 입력: w0 (초기 체중), i0 (초기 기초 대사량), i (일일 섭취 칼로리), a (일일 활동 대사량), d (다이어트 기간), t (기초 대사량 변화 기준)
// 출력: (w1, w2, m2) 튜플로 반환
//       w1: 기초 대사량 변화를 고려하지 않았을 때의 최종 체중
//       w2: 기초 대사량 변화를 고려했을 때의 최종 체중
//       m2: 기초 대사량 변화를 고려했을 때의 최종 기초 대사량
tuple<int, int, int> diet(int w0, int i0, int i, int a, int d, int t) {
    // 초기값 설정
    int w1 = w0, m1 = i0; // w1: 체중 (기초 대사량 변화 고려 X), m1: 기초 대사량 (기초 대사량 변화 고려 X)
    int w2 = w0, m2 = i0; // w2: 체중 (기초 대사량 변화 고려 O), m2: 기초 대사량 (기초 대사량 변화 고려 O)

    // d일 동안 다이어트 시뮬레이션 실행
    while (d--) {
        // 기초 대사량 변화를 고려하지 않았을 때 체중 변화
        // 체중 = 현재 체중 + (일일 섭취 칼로리 - (기초 대사량 + 활동 대사량))
        w1 += i - (m1 + a);

        // 기초 대사량 변화를 고려했을 때 체중 변화
        w2 += i - (m2 + a);

        // 기초 대사량 변화를 고려한 경우
        // (섭취 칼로리 - (기초 대사량 + 활동 대사량))이 t보다 크다면 기초 대사량 변화
        if (abs(i - (m2 + a)) > t) {
            // 기초 대사량 변화는 (섭취 칼로리 - (기초 대사량 + 활동 대사량)) / 2
            // C++에서 정수 나눗셈은 소수점 이하를 버리므로, 실수 나눗셈
            m2 += float(i - (m2 + a)) / 2.0;
        }
    }

    // 결과 반환: (기초 대사량 변화 고려 X 체중, 기초 대사량 변화 고려 O 체중, 최종 기초 대사량)
    return {w1, w2, m2};
}

int main() {
    // 초기 입력 변수
    int w0, i0, i, a;
    int d, t;

    // 결과 출력 변수
    int final_weight, final_meta;

    // 사용자 입력 받기
    // w0: 초기 체중, i0: 초기 기초 대사량, t: 기초 대사량 변화 기준
    cin >> w0 >> i0 >> t;

    // d: 다이어트 기간, i: 일일 섭취 칼로리, a: 일일 활동 대사량
    cin >> d >> i >> a;

    // 다이어트 시뮬레이션 실행
    tuple<int, int, int> tmp = diet(w0, i0, i, a, d, t);

    // 시뮬레이션 결과
    int w1 = get<0>(tmp);  // 기초 대사량 변화 고려 X 최종 체중
    int m1 = i0;           // 기초 대사량 변화 고려 X: 초기 기초 대사량 그대로 유지
    int w2 = get<1>(tmp);  // 기초 대사량 변화 고려 O 최종 체중
    int m2 = get<2>(tmp);  // 기초 대사량 변화 고려 O 최종 기초 대사량

    // 기초 대사량 변화 고려 X 시뮬레이션 결과 출력
    if (w1 <= 0) {
        // 체중이 0 이하로 떨어지면 "Danger Diet" 출력
        // (기초 대사량 변화가 없으므로 m1은 변화하지 않고, 항상 i0와 동일)
        cout << "Danger Diet\n";
    } else {
        // 체중과 기초 대사량 출력
        cout << w1 << " " << m1 << "\n";
    }

    // 기초 대사량 변화 고려 O 시뮬레이션 결과 출력
    if (w2 <= 0 || m2 <= 0) {
        // 체중이나 기초 대사량이 0 이하로 떨어지면 "Danger Diet" 출력
        cout << "Danger Diet";
    } else {
        // 체중과 기초 대사량 출력
        cout << w2 << " " << m2 << " ";

        // 기초 대사량이 초기 값보다 감소하면 "YOYO", 그렇지 않으면 "NO" 출력
        if (m2 < i0) {
            cout << "YOYO";
        } else {
            cout << "NO";
        }
    }

    return 0;
}